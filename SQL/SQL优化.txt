1. 解析规则
	ORACLE 的解析器按照从右到左的顺序处理 FROM 子句中的表名,因此 FROM 子句中写在最后的表(基础表 driving table)将被最先处理. 
在 FROM 子句中包含多个表的情况下,你必须选择记录条数最少的表作为基础表.
	如果有 3 个以上的表连接查询, 那就需要选择交叉表(intersection table)作为基础表, 交叉表是指那个被其他表所引用的表. 
2. WHERE 子句中的连接顺序． 
	ORACLE 采用自下而上的顺序解析 WHERE 子句,根据这个原理,表之间的连接必须写在其他 WHERE 条件之前, 
那些可以过滤掉最大数量记录的条件必须写在 WHERE 子句的末尾. 
3. SELECT 子句中避免使用 ‘ * ‘ 
	当你想在 SELECT 子句中列出所有的 COLUMN 时,使用动态 SQL 列引用 ‘*’ 是一个方便的方法.不幸的是,这是一个非常低效的方法. 
实际上,ORACLE 在解析的过程中, 会将’*’ 依次转换成所有的列名, 这个工作是通过查询数据字典完成的, 这意味着将耗费更多的时间.  
4. 减少访问数据库的次数 
	当执行每条 SQL 语句时, ORACLE 在内部执行了许多工作: 解析 SQL 语句, 估算索引的利用率, 绑定变量 , 读数据块等等.
由此可见, 减少访问数据库的次数 , 就能实际上减少 ORACLE 的工作量. 
5. 使用 DECODE 函数来减少处理时间 
	使用 DECODE 函数可以避免重复扫描相同记录或重复连接相同的表. 
6. 整合简单,无关联的数据库访问 
如果你有几个简单的数据库查询语句,你可以把它们整合到一个查询中(即使它们之间没有关系) 
7. 删除重复记录 
最高效的删除重复记录方法 ( 因为使用了 ROWID)
``` 
DELETE FROM EMP E 
WHERE E.ROWID > (SELECT MIN(X.ROWID)  
FROM EMP X 
WHERE X.EMP_NO = E.EMP_NO); 
```